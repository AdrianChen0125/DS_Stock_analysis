{
	"name": "Pipeline 1",
	"properties": {
		"activities": [
			{
				"name": "extract stock price",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ETL01_Stock_price",
						"type": "NotebookReference"
					},
					"parameters": {
						"undefined": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 1
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "extract company report",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "extract stock price",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ETL02_Company_report",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "extract  reddit comments",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "extract company report",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ETL03_reddit",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "Extract Youtube comments",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "extract  reddit comments",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ETL04_Youtube_cm",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "extract stock news",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Extract Youtube comments",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ETL05_Stock_news",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "extract economic index",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "extract stock news",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ETL06_economic_index",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "stock price prediction",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "extract economic index",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "AL01_TIME_SERIES_Analysis",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "sentiment youtube",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "AL03_Sentiment_analysis_Youtube",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 1
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "sentiment reddit",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "sentiment youtube",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "AL02_Sentiment_analysis_reddits",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "spark0625",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 1
					},
					"driverSize": "Small",
					"numExecutors": 1
				}
			},
			{
				"name": "Execute Pipeline1",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true
				}
			}
		],
		"annotations": []
	}
}